
atlas {
  cloudwatch {

    idp-request = {
      namespace = "Netflix:IdpProxy"
      period = 1m
      end-period-offset = 4

      dimensions = [
        "Method"
      ]

      metrics = [
        {
          name = "Requests"
          alias = "aws.idpProxy.requests"
          conversion = "sum,rate"
        }
      ]
    }

    idp-routing = {
      namespace = "Netflix:IdpProxy"
      period = 1m
      end-period-offset = 4

      dimensions = [
        "Result",
        "Protocol"
      ]

      metrics = [
        {
          name = "Routing"
          alias = "aws.idpProxy.routing"
          conversion = "sum,rate"
        }
      ]
    }

    idp-jwksFetch = {
      namespace = "Netflix:IdpProxy"
      period = 1m
      end-period-offset = 4

      dimensions = [
        "JwksOrigin"
      ]

      metrics = [
        {
          name = "JwksFetch"
          alias = "aws.idpProxy.jwksFetch"
          conversion = "sum,rate"
        },
        {
          name = "JwksFetchLatency"
          alias = "aws.idpProxy.jwksFetchLatency"
          conversion = "timer-millis"
        }
      ]
    }

    idp-error = {
      namespace = "Netflix:IdpProxy"
      period = 1m
      end-period-offset = 4

      dimensions = [
        "Stream",
        "Error"
      ]

      metrics = [
        {
          name = "LogProcessingError"
          alias = "aws.idpProxy.logProcessingError"
          conversion = "sum,rate"
        }
      ]
    }
  }
}
