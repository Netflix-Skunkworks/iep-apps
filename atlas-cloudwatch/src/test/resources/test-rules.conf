atlas {
  cloudwatch {
    tagger.mappings = ${?atlas.cloudwatch.tagger.mappings} [
      {
        name = "MyTag"
        alias = "aws.tag"
      }
    ]

    ut1 = {
      namespace = "AWS/UT1"
      period = 1m

      dimensions = [
        "MyTag"
      ]

      metrics = [
        {
          name = "SumRate"
          alias = "aws.utm.sumrate"
          conversion = "sum,rate"
        },
        {
          name = "Dist"
          alias = "aws.utm.dist"
          conversion = "dist-summary"
        },
        {
          name = "Max"
          alias = "aws.utm.max"
          conversion = "max"
        },
        {
          name = "TwoRuleMatch"
          alias = "aws.utm.2rulematch"
          conversion = "min"
        },
        {
          name = "TwoRuleMatch"
          alias = "aws.utm.2rulematch"
          conversion = "max"
        }
      ]
    }

    ut5 = {
      namespace = "AWS/UT1"
      period = 5m

      dimensions = [
        "MyTag"
      ]

      metrics = [
        {
          name = "5Min"
          alias = "aws.utm.5min"
          conversion = "sum,rate"
        }
      ]
    }

    ut-asg = {
      namespace = "AWS/UT1"
      period = 1m

      dimensions = [
        "AvailabilityZone",
        "LoadBalancerName"
      ]

      metrics = [
        {
          name = "Timer"
          alias = "aws.utm.timer"
          conversion = "timer"
        },
        {
          name = "Bytes"
          alias = "aws.utm.bytes"
          conversion = "sum,rate"
        }
      ]
    }

    ut-timeout = {
      namespace = "AWS/UT1"
      period = 1m
      timeout = 15m

      dimensions = [
        "MyTag"
      ]

      metrics = [
        {
          name = "TimeOut"
          alias = "aws.utm.timeout"
          conversion = "max"
        }
      ]
    }

    ut-offset = {
      namespace = "AWS/UT1"
      period = 1m
      end-period-offset = 1

      dimensions = [
        "MyTag"
      ]

      metrics = [
        {
          name = "Offset"
          alias = "aws.utm.offset"
          conversion = "max"
        }
      ]
    }

    ut-mono = {
      namespace = "AWS/UT1"
      period = 1m

      dimensions = [
        "MyTag"
      ]

      metrics = [
        {
          name = "Mono"
          alias = "aws.utm.mono"
          conversion = "max,rate"
          monotonic = true
        }
      ]
    }

    ut-redis = {
      namespace = "AWS/UTRedis"
      period = 1m

      dimensions = [
        "node",
        "key"
      ]

      metrics = [
        {
          name = "Redis"
          alias = "aws.utm.redis"
          conversion = "dist-summary"
        }
      ]
    }

    ut-daily = {
      namespace = "AWS/UT1"
      period = 1d
      poll-offset = 8h
      filter = "MyTag,c,:eq"

      dimensions = [
        "MyTag"
      ]

      metrics = [
        {
          name = "DailyMetricA"
          alias = "aws.utm.dailyA"
          conversion = "max"
        },
        {
          name = "DailyMetricB"
          alias = "aws.utm.dailyB"
          conversion = "max"
        }
      ]
    }

    queryfilter = {
      namespace = "AWS/UTQueryFilter"
      period = 1m

      dimensions = [
        "Key"
      ]

      metrics = [
        {
          name = "MyTestMetric"
          alias = "aws.queryfilter.mytestmetric"
          conversion = "max,rate"
          monotonic = true
        }
      ]

      filter = "Key,:has"
    }

  }
}